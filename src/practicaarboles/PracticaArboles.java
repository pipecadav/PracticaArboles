
package practicaarboles;

import arbolbinario.ArbolBinario;
import arbolnario.ArbolNario;
import java.awt.Color;
import javax.swing.JFrame;
/**
 * Clase principal que crea el programa para las funciones.
 * @author Felipe Cadavid y Carolina Diaz
 */
public class PracticaArboles extends javax.swing.JFrame {

        ArbolBinario a = new ArbolBinario();
        ArbolNario b = new ArbolNario();
    
    /**
     * Creates new form PracticaArboles
     */
    public PracticaArboles() {
    

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        crearNario = new javax.swing.JButton();
        crearBinario = new javax.swing.JButton();
        pHilera = new javax.swing.JTextField();
        convertirAbinario = new javax.swing.JButton();
        inOrden = new javax.swing.JButton();
        preOrden = new javax.swing.JButton();
        posOrden = new javax.swing.JButton();
        graficarNario = new javax.swing.JButton();
        graficarBinario = new javax.swing.JButton();
        SalidaTexto = new javax.swing.JTextField();
        Borrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Arboles N-Arios y Binarios");

        crearNario.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        crearNario.setText("Crear N-Ario");
        crearNario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearNarioActionPerformed(evt);
            }
        });

        crearBinario.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        crearBinario.setText("Crear Binario");
        crearBinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearBinarioActionPerformed(evt);
            }
        });

        pHilera.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pHilera.setText("Ingrese Arbol como Hilera");
        pHilera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pHileraActionPerformed(evt);
            }
        });

        convertirAbinario.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        convertirAbinario.setText("Convertir A Binario");
        convertirAbinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertirAbinarioActionPerformed(evt);
            }
        });

        inOrden.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        inOrden.setText("InOrden");
        inOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inOrdenActionPerformed(evt);
            }
        });

        preOrden.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        preOrden.setText("PrePrden");
        preOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preOrdenActionPerformed(evt);
            }
        });

        posOrden.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        posOrden.setText("PosOrden");
        posOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posOrdenActionPerformed(evt);
            }
        });

        graficarNario.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        graficarNario.setText("Graficar N-Ario");
        graficarNario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarNarioActionPerformed(evt);
            }
        });

        graficarBinario.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        graficarBinario.setText("Graficar Binario");
        graficarBinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarBinarioActionPerformed(evt);
            }
        });

        SalidaTexto.setEditable(false);
        SalidaTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalidaTextoActionPerformed(evt);
            }
        });

        Borrar.setText("Borrar");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(crearNario))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(graficarNario))
                                    .addComponent(convertirAbinario))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(inOrden)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(preOrden)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(posOrden))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(crearBinario))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 325, Short.MAX_VALUE)
                                .addComponent(graficarBinario)
                                .addGap(65, 65, 65)))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pHilera, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(SalidaTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(Borrar)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(pHilera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(crearNario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(convertirAbinario))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(crearBinario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inOrden)
                            .addComponent(preOrden)
                            .addComponent(posOrden))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(graficarBinario)
                    .addComponent(graficarNario))
                .addGap(28, 28, 28)
                .addComponent(SalidaTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Borrar)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        Borrar.getAccessibleContext().setAccessibleName("Borrar");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crearNarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearNarioActionPerformed
        // Crear N-ario
        b.crearArbolNario(pHilera.getText());
    }//GEN-LAST:event_crearNarioActionPerformed

    private void crearBinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearBinarioActionPerformed
        // Crear Binario
        a.crearArbolBinario(pHilera.getText());
    }//GEN-LAST:event_crearBinarioActionPerformed

    private void convertirAbinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertirAbinarioActionPerformed
        // Convertir A Binario
        a.convertirBinArio(b);
    }//GEN-LAST:event_convertirAbinarioActionPerformed

    private void pHileraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pHileraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pHileraActionPerformed

    private void inOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inOrdenActionPerformed
        // TODO add your handling code here:
        
        SalidaTexto.setText(a.inOrden(a.getRoot()));

    }//GEN-LAST:event_inOrdenActionPerformed

    private void preOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preOrdenActionPerformed
        // TODO add your handling code here:
        
        SalidaTexto.setText(a.preOrden(a.getRoot()));
    }//GEN-LAST:event_preOrdenActionPerformed

    private void posOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posOrdenActionPerformed
        // TODO add your handling code here:
        
        SalidaTexto.setText(a.posOrden(a.getRoot()));
    }//GEN-LAST:event_posOrdenActionPerformed

    private void SalidaTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalidaTextoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SalidaTextoActionPerformed

    private void graficarBinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarBinarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_graficarBinarioActionPerformed

    private void graficarNarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarNarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_graficarNarioActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        // TODO add your handling code here:
        SalidaTexto.setText(null);
    }//GEN-LAST:event_BorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PracticaArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PracticaArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PracticaArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PracticaArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PracticaArboles().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Borrar;
    private javax.swing.JTextField SalidaTexto;
    private javax.swing.JButton convertirAbinario;
    private javax.swing.JButton crearBinario;
    private javax.swing.JButton crearNario;
    private javax.swing.JButton graficarBinario;
    private javax.swing.JButton graficarNario;
    private javax.swing.JButton inOrden;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField pHilera;
    private javax.swing.JButton posOrden;
    private javax.swing.JButton preOrden;
    // End of variables declaration//GEN-END:variables
}
